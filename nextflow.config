/*
 * Copyright (c) 2013-2023, Seqera Labs.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code Form is "Incompatible With Secondary Licenses", as
 * defined by the Mozilla Public License, v. 2.0.
 *
 */

manifest {
  description = 'Proof of concept of a RNA-seq pipeline implemented with Nextflow'
  author = 'Paolo Di Tommaso'
  nextflowVersion = '>=23.10.0'
}

/*
 * default params
 */

params.outdir = "results"
params.reads = "${projectDir}/data/ggal/ggal_gut_{1,2}.fq"
params.transcriptome = "${projectDir}/data/ggal/ggal_1_48850000_49020000.Ggal71.500bpflank.fa"
params.multiqc = "${projectDir}/multiqc"

/*
 * defines execution profiles for different environments
 */

profiles {
  standard {
    process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
  }

  'all-reads' {
    params.reads = "${projectDir}/data/ggal/ggal_*_{1,2}.fq"
  }

  'arm64' {
    process.arch = 'arm64'
  }

  'wave' {
    wave.enabled = true
    wave.strategy = 'conda'
    wave.freeze = true
  }

  'wave-mirror' {
    wave.enabled = true
    wave.strategy = 'container'
    wave.mirror = true
    wave.build.repository = 'quay.io'
  }

  'docker' {
    process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
    docker.enabled = true
  }

  'singularity' {
    process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
    singularity.enabled = true
    singularity.autoMounts = true
  }

  'conda' {
    conda.enabled = true
    conda.channels = 'conda-forge,bioconda'
  }

  'mamba' {
    conda.enabled = true
    conda.useMicromamba = true
    conda.channels = 'conda-forge,bioconda'
  }

  'slurm' {
    process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
    process.executor = 'slurm'
    singularity.enabled = true
  }

  'batch' {
    params.reads = 's3://rnaseq-nf/data/ggal/lung_{1,2}.fq'
    params.transcriptome = 's3://rnaseq-nf/data/ggal/transcript.fa'
    process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
    process.executor = 'awsbatch'
    process.queue = 'nextflow-ci'
    workDir = 's3://nextflow-ci/work'
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
  }

  's3-data' {
    process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
    params.reads = 's3://rnaseq-nf/data/ggal/lung_{1,2}.fq'
    params.transcriptome = 's3://rnaseq-nf/data/ggal/transcript.fa'
  }

  'google-batch' {
      params.transcriptome = 'gs://rnaseq-nf/data/ggal/transcript.fa'
      params.reads = 'gs://rnaseq-nf/data/ggal/gut_{1,2}.fq'
      params.multiqc = 'gs://rnaseq-nf/multiqc'
      process.executor = 'google-batch'
      process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
      /*
       * replace with your own bucket!
       */
      workDir = 'gs://rnaseq-nf/scratch'
      google.region  = 'europe-west2'
  }

  'gs-data' {
      process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
      params.transcriptome = 'gs://rnaseq-nf/data/ggal/transcript.fa'
      params.reads = 'gs://rnaseq-nf/data/ggal/gut_{1,2}.fq'
  }

  'azure-batch' {
    process.container = 'docker.io/nextflow/rnaseq-nf:v1.3.1'
    workDir = 'az://nf-scratch/work'
    process.executor = 'azurebatch'
    /*
     *place with your own Azure pool name!
     */
    process.queue = 'nextflow-ci'

    /*
     * make sure the following variables are defined in your environment
     * - AZURE_BATCH_ACCOUNT_NAME
     * - AZURE_BATCH_ACCOUNT_KEY
     * - AZURE_STORAGE_ACCOUNT_NAME
     * - AZURE_STORAGE_ACCOUNT_KEY
     * see https://www.nextflow.io/docs/latest/azure.html#azure-batch
     */

    azure {
      batch {
        location = 'westeurope'
        autoPoolMode = true
        deletePoolsOnCompletion = true
      }
    }
  }
}
